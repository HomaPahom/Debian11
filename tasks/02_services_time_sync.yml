---
      - name: "Install chrony for time synchronization"
        ansible.builtin.package:
          name: chrony
          state: present

      - name: "Remove other time synchronization packages"
        ansible.builtin.package:
          name:
            - ntp
            - systemd-timesyncd
          state: absent

      - name: "Ensure chrony service is enabled and running"
        ansible.builtin.systemd:
          name: chronyd
          state: started
          enabled: true

      - name: "2.1.2.1 | Ensure Chrony is configured with authorized timeservers"
        ansible.builtin.copy:
          dest: /etc/chrony/sources.d/pool.sources
          owner: root
          group: root
          mode: '0644'
          content: |
            # CIS 2.1.2.1 — Authorized NTP sources
            pool 0.debian.pool.ntp.org iburst
            pool 1.debian.pool.ntp.org iburst
            pool 2.debian.pool.ntp.org iburst
            pool 3.debian.pool.ntp.org iburst

      - name: "Ensure sources.d is loaded in chrony.conf"
        ansible.builtin.lineinfile:
          path: /etc/chrony/chrony.conf
          regexp: '^sourcedir /etc/chrony/sources.d'
          line: 'sourcedir /etc/chrony/sources.d'

      - name: "2.1.2.2 | Ensure Chrony runs as user _chrony"
        ansible.builtin.lineinfile:
          path: /etc/chrony/chrony.conf
          regexp: '^user _chrony'
          line: 'user _chrony'
          insertafter: '^#.*user'  # если комментарий есть — заменит
          create: yes

      - name: "2.1.2.3 | Ensure Chrony is enabled and running"
        ansible.builtin.systemd:
          name: chrony
          state: started
          enabled: true

      - name: "Show chrony service status"
        ansible.builtin.command: systemctl status chrony --no-pager
        register: chrony_status
        changed_when: false

      - name: "Display chrony status"
        ansible.builtin.debug:
          msg: "{{ chrony_status.stdout_lines }}"

      - name: "2.1.3.0 | Ensure systemd-timesyncd package is installed"
        ansible.builtin.package:
          name: systemd-timesyncd
          state: present

      - name: "2.1.3.1 | Ensure timesyncd config directory exists"
        ansible.builtin.file:
          path: /etc/systemd/timesyncd.conf.d
          state: directory
          owner: root
          group: root
          mode: '0755'

      - name: "2.1.3.1 | Configure authorized NTP servers for systemd-timesyncd"
        ansible.builtin.copy:
          dest: /etc/systemd/timesyncd.conf.d/50-timesyncd.conf
          owner: root
          group: root
          mode: '0644'
          content: |
            ## Ansible controlled file
            # CIS 2.1.3.1 - Ensure authorized NTP servers configured
            [Time]
            NTP=ntp.ubuntu.com time.google.com
            FallbackNTP=pool.ntp.org time.cloudflare.com
            RootDistanceMaxSec=5
            PollIntervalMinSec=32
            PollIntervalMaxSec=2048
        notify: Restart timeservice

      - name: "2.1.3.2 | Ensure systemd-timesyncd is enabled and running"
        ansible.builtin.systemd:
          name: systemd-timesyncd
          state: started
          enabled: true
          masked: false
      - name: "2.2.1 | Ensure X Window System is not installed"
        ansible.builtin.package:
          name: xserver-xorg*
          state: absent

      - name: "2.3.1 | Ensure NIS Client is not installed"
        ansible.builtin.package:
          name: nis
          state: absent

      - name: "2.3.2 | Ensure rsh client is not installed"
        ansible.builtin.package:
          name: rsh-client
          state: absent

      - name: "2.3.3 | Ensure talk client is not installed"
        ansible.builtin.package:
          name: talk
          state: absent

      - name: "2.3.5 | Ensure LDAP client is not installed"
        ansible.builtin.package:
          name: ldap-utils
          state: absent

      - name: "2.4 | Check for listening network services"
        ansible.builtin.shell: |
          lsof -i -P -n | grep -v "(ESTABLISHED)" || true
        register: listening_services
        changed_when: false
        failed_when: false

      - name: "2.4 | Write results to file"
        ansible.builtin.copy:
          dest: /root/nonessential_services_audit.txt
          content: |
            ===== CIS 2.4 Audit: Listening Services =====
            {% if listening_services.stdout | length > 0 %}
            The following services are currently listening on network ports:
            {{ listening_services.stdout }}
            {% else %}
            No unexpected network services detected. System is clean.
            {% endif %}
          owner: root
          group: root
          mode: '0600'

      - name: "2.4 | Display summary in console"
        ansible.builtin.debug:
          msg: >
            Results have been saved to /root/nonessential_services_audit.txt


